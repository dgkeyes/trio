filter(rating != 0) %>%
group_by(training_year, training_type, course) %>%
summarize(avg_rating = round(mean(rating, na.rm = TRUE), 1)) %>%
mutate(course = str_replace(course, "Ii", "II")) %>%
mutate(course = str_wrap(course, width = 40)) %>%
ungroup() %>%
mutate(training_year = as.character(training_year))
```
#### Online
Comparing satisfaction levels between years, we can see that the ratings are higher for 2018 than they were in 2017. Particularly notable is the question around opportunities to ask questions and receive feedback. This item had an average rating of 2.6 in 2017, but jumped to 3.2 in 2018. This was likely the result of the Q&A sessions that organizers added this year.
`r fig_nums("aspects_session_online", "Online Course Satisfaction")`
```{r include = T, fig.height=8}
ggplot(filter(aspects_session_type, training_type == "Online"),
aes(x = training_year,
y = avg_rating,
fill = factor(training_year))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = avg_rating), hjust = -.5) +
coord_flip() +
scale_y_continuous(limits = c(0, 4)) +
mna.bar.chart.theme +
theme(legend.position = "bottom",
legend.title = element_blank()) +
labs(caption = "n = 108") +
scale_fill_manual(values = c(mna.blue, mna.red)) +
facet_wrap(~course, ncol = 2)
```
#### Hybrid
For hybrid sessions, the largest gap was on opportunities to network with fellow trainees. The 3.7 rating in 2018 was a full point above the 2.7 rating in 2017. The one area of concern is with regard to depth of content, which dropped from 3.4 in 2017 to 2.8 in 2018.
`r fig_nums("aspects_session_hybrid", "Hybrid Course Satisfaction")`
```{r include = T, fig.height=8}
ggplot(filter(aspects_session_type, training_type == "Hybrid"),
aes(x = training_year,
y = avg_rating,
fill = factor(training_year))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = avg_rating), hjust = -.5) +
coord_flip() +
scale_y_continuous(limits = c(0, 4)) +
mna.bar.chart.theme +
theme(legend.position = "bottom",
legend.title = element_blank()) +
labs(caption = "n = 20") +
scale_fill_manual(values = c(mna.blue, mna.red)) +
facet_wrap(~course, ncol = 2)
```
#### In Person
In person trainings saw growth in satisfaction levels in every area.
`r fig_nums("aspects_session_ip", "In Person Course Satisfaction")`
```{r include = T, fig.height=8}
ggplot(filter(aspects_session_type, training_type == "In person"),
aes(x = training_year,
y = avg_rating,
fill = factor(training_year))) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = avg_rating), hjust = -.5) +
coord_flip() +
scale_y_continuous(limits = c(0, 4)) +
mna.bar.chart.theme +
theme(legend.position = "bottom",
legend.title = element_blank()) +
labs(caption = "n = 95") +
scale_fill_manual(values = c(mna.blue, mna.red)) +
facet_wrap(~course, ncol = 2)
```
### If you rated low or medium, please mention why.
```{r results = "asis", include = TRUE}
post.surveys %>%
filter(training_year == 2018) %>%
select("if_you_rated_low_or_medium_please_mention_why") %>%
dk_prep_quotes()
```
## Knowledge Growth
### 2018 altogether and comparing to last year
`r fig_nums("knowledge_growth_fig", "Knowledge Growth")`
```{r include = TRUE, fig.height = 9}
knowledge.growth <- knowledge.growth %>%
mutate(item = str_wrap(item, 30)) %>%
mutate(training_id = factor(training_id,
levels = session.order)) %>%
mutate(training_id = fct_rev(training_id))
ggplot(knowledge.growth,
aes(x = avg_rating,
y = training_id,
group = training_id,
fill = timing,
color = timing)) +
# geom_line(color = mna.medium.gray) +
geom_point() +
geom_text(data = filter(knowledge.growth, timing == "Pre"),
aes(label = avg_rating), hjust = 1.5) +
geom_text(data = filter(knowledge.growth, timing == "Post"),
aes(label = avg_rating), hjust = -.5) +
facet_wrap(~item, ncol = 3) +
mna.bar.chart.theme +
theme(panel.grid.major.y = element_line(color = mna.light.gray)) +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_x_continuous(limits = c(0, 4)) +
labs(caption = "n = 238")
```
# Other
## Other topics
```{r results = "asis", include = TRUE}
post.surveys %>%
filter(training_year == 2018) %>%
select("are_there_any_additional_topic_s_that_could_be_added_in_future_training_s") %>%
dk_prep_quotes()
```
## Want follow-up session
```{r}
follow.up <- post.surveys %>%
filter(training_year == 2018) %>%
select(would_you_like_a_follow_up_training_session_on_the_same_topic_s) %>%
set_names("response") %>%
filter(!is.na(response)) %>%
count(response) %>%
mutate(pct = dk_proportions(n)) %>%
mutate(response = factor(response, levels = c("Yes", "Maybe", "No"))) %>%
mutate(popup_text = paste(response,
"<br>",
n,
" (",
percent(pct),
")",
sep = ""))
```
```{r, include=TRUE, fig.height=2, fig.width=6}
ggplot(follow.up, aes(x = response,
y = n,
# text = popup_text,
fill = response)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.blue,
mna.medium.gray,
mna.red)) +
mna.bar.chart.theme +
labs(caption = "n = 119")
```
## Recommend to colleague
```{r}
recommend.training <- post.surveys %>%
filter(training_year == 2018) %>%
select(will_you_recommend_this_training_to_your_colleague_s) %>%
set_names("response") %>%
filter(!is.na(response)) %>%
count(response) %>%
mutate(pct = dk_proportions(n)) %>%
mutate(response = factor(response, levels = c("Yes", "Maybe", "No"))) %>%
mutate(popup_text = paste(response,
"<br>",
n,
" (",
percent(pct),
")",
sep = ""))
```
```{r, fig.height=2, fig.width=6, include=TRUE}
ggplot(recommend.training, aes(x = response,
y = n,
# text = popup_text,
fill = response)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_y_continuous(limits = c(0, 130)) +
scale_fill_manual(values = c(mna.blue,
mna.medium.gray,
mna.red)) +
mna.bar.chart.theme
```
# Conclusion
Q&A in online courses helped
# Areas of improvement
From last year
- Make online courses more interactive
- Make sure that the training is tailored to the specific needs of those taking part.
- Ensure that all participants have reference guides they can use after the trainings.
- Provide a buddy peer support system.
us_map <- map_data("state")
institutions_filtered <- institutions %>%
filter(lon > -125)
# Packages ----------------------------------------------------------------
library(googlesheets)
library(tidyverse)
library(janitor)
library(readxl)
library(lubridate)
# Pre ---------------------------------------------------------------------
pre.surveys.2018 <- gs_title("2018 TRIO Training Pre-Survey (Responses)")
pre.surveys.2018 <- gs_read(pre.surveys.2018) %>%
clean_names() %>%
mutate(if_no_how_many_other_staff_members_work_in_your_department_numerical_value_only = as.character(if_no_how_many_other_staff_members_work_in_your_department_numerical_value_only))
pre.surveys.2017.sheet <- gs_title("TRIO training data 2017 - merged")
pre.surveys.2017 <- gs_read(pre.surveys.2017.sheet, ws = "Pre") %>%
clean_names() %>%
mutate(if_no_how_many_other_staff_members_work_in_your_department_numerical_value_only = as.character(if_no_how_many_other_staff_members_work_in_your_department_numerical_value_only))
pre.surveys <- bind_rows(pre.surveys.2018, pre.surveys.2017)
pre.surveys %>%
select(how_long_has_your_institution_been_a_recipient_of_a_federal_trio_program_round_to_the_nearest_whole_number_of_years) %>%
unique()
# Post --------------------------------------------------------------------
post.surveys.2017.march <- gs_url("https://docs.google.com/spreadsheets/d/1pFKHHCSabHYB0AEsB6_Jf9Qj97gnatGGRfn2j1jW9KU/edit#gid=133904600")
post.surveys.2017.march <- gs_read(post.surveys.2017.march) %>%
clean_names()
post.surveys.2017.may <- gs_url("https://docs.google.com/spreadsheets/d/18csE-KoqaZlKZRfmT3S26zJXmUa-gkeOwF7S9doOC3o/edit#gid=787154103")
post.surveys.2017.may <- gs_read(post.surveys.2017.may) %>%
clean_names()
post.surveys.2017.august <- gs_url("https://docs.google.com/spreadsheets/d/13HStU4A4G1i5yG8uAIDNgWnQkMxcLL2r3FOpwJEfKXI/edit#gid=1665067623")
post.surveys.2017.august <- gs_read(post.surveys.2017.august) %>%
clean_names()
post.surveys.2017.sheet <- gs_title("TRIO training data 2017 - merged")
post.surveys.2017 <- gs_read(post.surveys.2017.sheet, ws = "Post") %>%
clean_names()
post.surveys.2018 <- gs_title("2018 TRIO Training Post-Survey (Responses)")
post.surveys.2018 <- gs_read(post.surveys.2018) %>%
clean_names()
post.surveys <- bind_rows(post.surveys.2018,
post.surveys.2017.march,
post.surveys.2017.may,
post.surveys.2017.august)
# Calculate months --------------------------------------------------------
session.order <- c("Online (March 2017)",
"Hybrid (May 2017)",
"In person (July 2017)",
"Online (March 2018)",
"Hybrid (May 2018)",
"In person (June 2018)",
"In person (July 2018)",
"In person (August 2018)")
calculate_date_and_training_type <- function(dataset) {
dataset <- dataset %>%
mutate(training_date = mdy_hms(timestamp)) %>%
mutate(training_month = month(training_date)) %>%
mutate(training_day = day(training_date)) %>%
mutate(training_year = year(training_date)) %>%
mutate(training_month = case_when(
(training_day == 30 | training_day == 31) & training_year == 2018 ~ 8,
TRUE ~ training_month
)) %>%
mutate(training_month_text = month.name[training_month]) %>%
mutate(training_type = case_when(
month(training_date) == 3 | month(training_date) == 4 ~ "Online",
month(training_date) == 5 ~ "Hybrid",
TRUE ~ "In person"
)) %>%
mutate(training_id = paste0(training_type,
" (",
training_month_text,
" ",
training_year,
")")) %>%
mutate(training_id = factor(training_id, levels = session.order))
}
pre.surveys <- calculate_date_and_training_type(pre.surveys)
post.surveys <- post.surveys %>%
mutate(training_date = mdy_hms(timestamp)) %>%
mutate(training_month = month(training_date)) %>%
mutate(training_day = day(training_date)) %>%
mutate(training_year = year(training_date)) %>%
mutate(training_month_text = month.name[training_month]) %>%
mutate(training_type = case_when(
month(training_date) == 3 | month(training_date) == 4 ~ "Online",
month(training_date) == 5 ~ "Hybrid",
TRUE ~ "In person"
)) %>%
mutate(training_id = case_when(
training_year == 2017 & training_type == "Online" ~ "Online (March 2017)",
training_year == 2017 & training_type == "Hybrid" ~ "Hybrid (May 2017)",
training_year == 2017 & training_type == "In person" ~ "In person (July 2017)",
training_year == 2018 & training_type == "Online" ~ "Online (March 2018)",
training_year == 2018 & training_type == "Hybrid" ~ "Hybrid (May 2018)",
training_year == 2018 &
training_type == "In person" &
training_month_text == "June" ~ "In person (June 2018)",
training_year == 2018 &
training_type == "In person" &
training_month_text == "July" ~ "In person (July 2018)",
training_year == 2018 &
training_type == "In person" &
training_month_text == "August" ~ "In person (August 2018)"
))
# Knowledge growth --------------------------------------------------------
knowledge.post <- post.surveys %>%
select(contains("how_would_you_rate_your_current_level_of_knowledge"), training_type, training_year, training_id) %>%
gather(key = "item", value = "rating", -training_year, -training_type, -training_id) %>%
mutate(rating = parse_number(rating)) %>%
mutate(item = str_replace(item, "how_would_you_rate_your_current_level_of_knowledge_about_the_following_aspects_of_the_training_you_just_completed_", "")) %>%
mutate(item = str_replace_all(item, "_", " ")) %>%
mutate(item = str_to_title(item)) %>%
mutate(timing = "Post")
knowledge.pre <- pre.surveys %>%
select(contains("currently_how_would_you_rate_your_levels_of_knowledge_and_understanding"), training_type, training_year, training_id) %>%
gather(key = "item", value = "rating", -training_year, -training_type, -training_id) %>%
mutate(rating = parse_number(rating)) %>%
mutate(item = str_replace(item, "currently_how_would_you_rate_your_levels_of_knowledge_and_understanding_of_the_following_aspects_of_the_training_you_are_about_to_receive_", "")) %>%
mutate(item = str_replace_all(item, "_", " ")) %>%
mutate(item = str_to_title(item)) %>%
mutate(timing = "Pre")
knowledge.growth <- bind_rows(knowledge.pre, knowledge.post) %>%
mutate(item = str_replace(item, "Omb", "OMB")) %>%
mutate(item = str_replace(item, "Trio", "TRIO")) %>%
mutate(item = str_replace(item, "Asa", "As a")) %>%
mutate(item = str_replace(item, "Difference S", "Differences")) %>%
mutate(item = str_replace(item, "It C", "IT C")) %>%
group_by(training_type, training_year, training_id, timing, item) %>%
summarize(avg_rating = round(mean(rating, na.rm = TRUE), 1)) %>%
ungroup() %>%
# mutate(item = str_wrap(item, width = 40)) %>%
mutate(item = str_replace(item, "Doing Budget Management Through Internal Controls And Financial Management", "Managing Budget Through Internal Controls And Financial Management")) %>%
mutate(item = str_replace(item, "Application Of Governing Rules Of TRIO Program Components And Trio As A Whole", "Application Of Governing Rules Of TRIO Program Components And Trio As a Whole")) %>%
mutate(item = str_replace(item, "Right And Responsibilities Of Institutions That Agree To Sponsor TRIO Grants" , "Rights And Responsibilities Of Institutions That Agree To Sponsor TRIO Grants")) %>%
mutate(item = str_replace(item, "Difference Between Allowable And Non Allowable Costs" , "Differences Between Allowable And Non Allowable Costs")) %>%
mutate(timing = factor(timing, levels = c("Pre", "Post"))) %>%
mutate(popup_text = paste(timing,
": ",
avg_rating,
sep = ""))
rm(knowledge.pre, knowledge.post)
# Institutions ------------------------------------------------------------
# gs_title("TRIO participants") %>%
#      gs_download(to = "data/institutions.xlsx")
institutions <- read_excel("data/institutions.xlsx") %>%
select(training, Longitude, Latitude) %>%
set_names(c("training", "lon", "lat")) %>%
mutate(lon = as.numeric(lon)) %>%
mutate(lat = as.numeric(lat)) %>%
mutate(training = factor(training, levels = c("2018 Online",
"2018 Hybrid",
"2018 In Person (June)",
"2018 In Person (July)",
"2018 In Person (August)")))
session.order
pre.surveys %>%
filter(training_year == 2018) %>%
select(what_are_some_of_the_challenges_that_your_institution_currently_faces_as_related_to_budget_management_in_a_federal_trio_program) %>%
dk_prep_quotes()
pre.surveys %>%
filter(training_year == 2018) %>%
select(currently_are_you_one_of_the_main_budget_related_decision_makers_at_your_institution) %>%
set_names("response") %>%
group_by(response) %>%
count() %>%
ungroup() %>%
mutate(pct = prop.table(n))
decision.makers <- pre.surveys %>%
select(training_id, currently_are_you_one_of_the_main_budget_related_decision_makers_at_your_institution) %>%
set_names("training_id", "response") %>%
group_by(training_id, response) %>%
count()
decision.makers %>%
filter(str_detect(training_id, "2018")) %>%
ggplot(aes(x = response,
y = n,
color = factor(response),
fill = factor(response))) +
geom_bar(stat = "identity") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_y_continuous(limits = c(0, 60),
breaks = pretty_breaks()) +
mna.bar.chart.theme +
facet_wrap(~training_id, ncol = 2) +
labs(caption = "n = 258")
decision.makers %>%
# filter(str_detect(training_id, "2018")) %>%
ggplot(aes(x = response,
y = n,
color = factor(response),
fill = factor(response))) +
geom_bar(stat = "identity") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_y_continuous(limits = c(0, 60),
breaks = pretty_breaks()) +
mna.bar.chart.theme +
facet_wrap(~training_id, ncol = 2) +
labs(caption = "n = 258")
decision.makers %>%
# filter(str_detect(training_id, "2018")) %>%
ggplot(aes(x = response,
y = n,
color = factor(response),
fill = factor(response))) +
geom_bar(stat = "identity") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_y_continuous(limits = c(0, 60),
breaks = pretty_breaks()) +
mna.bar.chart.theme +
facet_wrap(~training_id, ncol = 2) +
labs(caption = "n = 258")
decision.makers %>%
# filter(str_detect(training_id, "2018")) %>%
ggplot(aes(x = response,
y = n,
color = factor(response),
fill = factor(response))) +
geom_bar(stat = "identity") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_y_continuous(limits = c(0, 60),
breaks = pretty_breaks()) +
mna.bar.chart.theme +
facet_wrap(~training_id, ncol = 2) +
labs(caption = "n = 258")
View(post.surveys)
post.surveys %>%
filter(training_year == 2018)
post.surveys %>%
filter(training_year == 2018) %>%
nrow()
post.surveys %>%
filter(training_year == 2018) %>%
group_by(training_type) %>%
nrow()
post.surveys %>%
filter(training_year == 2018) %>%
group_by(training_type) %>%
count()
post.surveys %>%
filter(training_year == 2018) %>%
group_by(training_id) %>%
count()
post.surveys %>%
filter(training_year == 2018) %>%
# group_by(training_id) %>%
count()
pre.surveys %>%
filter(training_year == 2018) %>%
group_by(training_id) %>%
count()
post.surveys %>%
filter(training_year == 2018) %>%
group_by(training_id) %>%
count()
post.surveys %>%
filter(training_year == 2018) %>%
group_by(training_id) %>%
count()
pre.surveys %>%
filter(training_year == 2018) %>%
group_by(training_id) %>%
count()
pre.surveys %>%
# filter(training_year == 2018) %>%
select(currently_are_you_one_of_the_main_budget_related_decision_makers_at_your_institution) %>%
set_names("response") %>%
group_by(response) %>%
count() %>%
ungroup() %>%
mutate(pct = prop.table(n))
decision.makers <- pre.surveys %>%
select(training_id, currently_are_you_one_of_the_main_budget_related_decision_makers_at_your_institution) %>%
set_names("training_id", "response") %>%
group_by(training_id, response) %>%
count()
decision.makers %>%
# filter(str_detect(training_id, "2018")) %>%
ggplot(aes(x = response,
y = n,
color = factor(response),
fill = factor(response))) +
geom_bar(stat = "identity") +
geom_text(aes(label = n), hjust = -.5) +
coord_flip() +
scale_fill_manual(values = c(mna.red, mna.blue)) +
scale_color_manual(values = c(mna.red, mna.blue)) +
scale_y_continuous(limits = c(0, 60),
breaks = pretty_breaks()) +
mna.bar.chart.theme +
facet_wrap(~training_id, ncol = 2) +
labs(caption = "n = 258")
attended.previous <- pre.surveys %>%
select(training_id, training_year, training_type, have_you_attended_a_similar_trio_training_program_in_the_past) %>%
rename("response" = have_you_attended_a_similar_trio_training_program_in_the_past) %>%
group_by(training_id, training_year, training_type) %>%
count(response) %>%
filter(!is.na(response)) %>%
mutate(pct = prop.table(n)) %>%
ungroup() %>%
mutate(training_year = ifelse(str_detect(training_id, "2018"),
2018,
2017))
ggplot(attended.previous, aes(x = training_id,
y = pct,
fill = response)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label=percent(pct,
accuracy = 1)),
position=position_stack(vjust=0.5), colour="white") +
coord_flip() +
scale_y_continuous(labels = percent) +
scale_fill_manual(values = c(mna.red,
mna.medium.gray,
mna.blue)) +
mna.bar.chart.theme +
theme(legend.position = "bottom",
axis.text.x = element_blank(),
legend.title = element_blank()) +
scale_y_reverse() +
labs(caption = str_glue("n = {nrow(pre.surveys)}"))
